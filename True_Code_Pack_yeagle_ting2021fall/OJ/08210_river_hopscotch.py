# -*- coding: utf-8 -*-
L, N, M = map(int, input().split())
rock = [0, *[int(input()) for _ in range(N)], L]
def too_far(x):
    num_rock = cur_rock = 0
    for i in range(1, N+2):
        if rock[i] - cur_rock < x:
            num_rock += 1
        else:
            cur_rock = rock[i]
        if num_rock > M:
            return True
    else: return False
low, upp = 0, L
while low != upp:
    mid = (low + upp)//2
    if too_far(mid):
        upp = mid
    else:
        low = mid+1
print(low-1)

"""info
Created on Tue Dec 14 07:31:53 2021
@author: Asus
http://cs101.openjudge.cn/practice/08210/
08210:河中跳房子
总时间限制: 1000ms 内存限制: 65536kB
描述
每年奶牛们都要举办各种特殊版本的跳房子比赛，包括在河里从一个岩石跳到另一个岩石。这项激动人心的活动在一条长长的笔直河道中进行，在起点和离起点L远 (1 ≤ L≤ 1,000,000,000) 的终点处均有一个岩石。在起点和终点之间，有N (0 ≤ N ≤ 50,000) 个岩石，每个岩石与起点的距离分别为Di (0 < Di < L)。
在比赛过程中，奶牛轮流从起点出发，尝试到达终点，每一步只能从一个岩石跳到另一个岩石。当然，实力不济的奶牛是没有办法完成目标的。
农夫约翰为他的奶牛们感到自豪并且年年都观看了这项比赛。但随着时间的推移，看着其他农夫的胆小奶牛们在相距很近的岩石之间缓慢前行，他感到非常厌烦。他计划移走一些岩石，使得从起点到终点的过程中，最短的跳跃距离最长。他可以移走除起点和终点外的至多M (0 ≤ M ≤ N) 个岩石。
请帮助约翰确定移走这些岩石后，最长可能的最短跳跃距离是多少？
输入
第一行包含三个整数L, N, M，相邻两个整数之间用单个空格隔开。
接下来N行，每行一个整数，表示每个岩石与起点的距离。岩石按与起点距离从近到远给出，且不会有两个岩石出现在同一个位置。
输出
一个整数，最长可能的最短跳跃距离。
样例输入
25 5 2
2
11
14
17
21
样例输出
4
提示
在移除位于2和14的两个岩石之后，最短跳跃距离为4（从17到21或从21到25）。
"""